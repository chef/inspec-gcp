# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
require 'gcp_backend'
require 'google/dataproc/property/projectregioncluster_labels'

# A provider to manage Dataproc resources.
class DataprocProjectRegionCluster < GcpResourceBase
  name 'google_dataproc_project_region_cluster'
  desc 'ProjectRegionCluster'
  supports platform: 'gcp'

  attr_reader :params
  attr_reader :project_id
  attr_reader :cluster_name
  attr_reader :config
  attr_reader :virtual_cluster_config
  attr_reader :labels
  attr_reader :status
  attr_reader :status_history
  attr_reader :cluster_uuid
  attr_reader :metrics

  def initialize(params)
    super(params.merge({ use_http_transport: true }))
    @params = params
    @fetched = @connection.fetch(product_url(params[:beta]), resource_base_url, params, 'Get')
    parse unless @fetched.nil?
  end

  def parse
    @project_id = @fetched['projectId']
    @cluster_name = @fetched['clusterName']
    @config = @fetched['config']
    @virtual_cluster_config = @fetched['virtualClusterConfig']
    @labels = GoogleInSpec::Dataproc::Property::ProjectRegionClusterLabels.new(@fetched['labels'], to_s)
    @status = @fetched['status']
    @status_history = @fetched['statusHistory']
    @cluster_uuid = @fetched['clusterUuid']
    @metrics = @fetched['metrics']
  end

  def exists?
    !@fetched.nil?
  end

  def to_s
    "ProjectRegionCluster #{@params[:clusterName]}"
  end

  private

  def product_url(_ = nil)
    'https://dataproc.googleapis.com/v1/'
  end

  def resource_base_url
    'projects/{{project_id}}/regions/{{region}}/clusters/{{cluster_name}}'
  end
end
