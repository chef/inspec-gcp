# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
require 'gcp_backend'

# A provider to manage Compute Engine resources.
class ComputeTargetSslProxy < GcpResourceBase
  name 'google_compute_target_ssl_proxy'
  desc 'TargetSslProxy'
  supports platform: 'gcp'

  attr_reader :params
  attr_reader :kind
  attr_reader :id
  attr_reader :creation_timestamp
  attr_reader :name
  attr_reader :description
  attr_reader :self_link
  attr_reader :service
  attr_reader :ssl_certificates
  attr_reader :certificate_map
  attr_reader :proxy_header
  attr_reader :ssl_policy

  def initialize(params)
    super(params.merge({ use_http_transport: true }))
    @params = params
    @fetched = @connection.fetch(product_url(params[:beta]), resource_base_url, params, 'Get')
    parse unless @fetched.nil?
  end

  def parse
    @kind = @fetched['kind']
    @id = @fetched['id']
    @creation_timestamp = @fetched['creationTimestamp']
    @name = @fetched['name']
    @description = @fetched['description']
    @self_link = @fetched['selfLink']
    @service = @fetched['service']
    @ssl_certificates = @fetched['sslCertificates']
    @certificate_map = @fetched['certificateMap']
    @proxy_header = @fetched['proxyHeader']
    @ssl_policy = @fetched['sslPolicy']
  end

  def exists?
    !@fetched.nil?
  end

  def to_s
    "TargetSslProxy #{@params[:name]}"
  end

  private

  def product_url(_ = nil)
    'https://compute.googleapis.com/compute/v1/'
  end

  def resource_base_url
    'projects/{{project}}/global/targetSslProxies/{{name}}'
  end
end
