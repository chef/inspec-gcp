# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
require 'gcp_backend'
class ApigeeOrganizationApiRevisions < GcpResourceBase
  name 'google_apigee_organization_api_revisions'
  desc 'OrganizationApiRevision plural resource'
  supports platform: 'gcp'

  attr_reader :table

  filter_table_config = FilterTable.create

  filter_table_config.add(:extensions, field: :extensions)
  filter_table_config.add(:content_types, field: :content_type)
  filter_table_config.add(:data, field: :data)

  filter_table_config.connect(self, :table)

  def initialize(params = {})
    super(params.merge({ use_http_transport: true }))
    @params = params
    @table = fetch_wrapped_resource('organizationApiRevisions')
  end

  def fetch_wrapped_resource(wrap_path)
    # fetch_resource returns an array of responses (to handle pagination)
    @connection.fetch_all(product_url, resource_base_url, @params, 'Get')
  end

  def revisions
    @table
  end
  def transform(key, value)
    return transformers[key].call(value) if transformers.key?(key)

    [key.to_sym, value]
  end

  def transformers
    {
      'extensions' => ->(obj) { [:extensions, obj['extensions']] },
      'contentType' => ->(obj) { [:content_type, obj['contentType']] },
      'data' => ->(obj) { [:data, obj['data']] },
    }
  end

  private

  def product_url(_ = nil)
    'https://apigee.googleapis.com/v1/'
  end

  def resource_base_url
    '{{parent}}/revisions'
  end
end
