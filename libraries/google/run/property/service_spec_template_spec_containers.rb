# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
require 'google/run/property/service_spec_template_spec_containers_env'
require 'google/run/property/service_spec_template_spec_containers_env_from'
require 'google/run/property/service_spec_template_spec_containers_liveness_probe'
require 'google/run/property/service_spec_template_spec_containers_liveness_probe_exec'
require 'google/run/property/service_spec_template_spec_containers_liveness_probe_grpc'
require 'google/run/property/service_spec_template_spec_containers_liveness_probe_http_get'
require 'google/run/property/service_spec_template_spec_containers_liveness_probe_http_get_http_headers'
require 'google/run/property/service_spec_template_spec_containers_liveness_probe_tcp_socket'
require 'google/run/property/service_spec_template_spec_containers_ports'
require 'google/run/property/service_spec_template_spec_containers_readiness_probe'
require 'google/run/property/service_spec_template_spec_containers_readiness_probe_exec'
require 'google/run/property/service_spec_template_spec_containers_readiness_probe_grpc'
require 'google/run/property/service_spec_template_spec_containers_readiness_probe_http_get'
require 'google/run/property/service_spec_template_spec_containers_readiness_probe_http_get_http_headers'
require 'google/run/property/service_spec_template_spec_containers_readiness_probe_tcp_socket'
require 'google/run/property/service_spec_template_spec_containers_resources'
require 'google/run/property/service_spec_template_spec_containers_resources_limits'
require 'google/run/property/service_spec_template_spec_containers_resources_requests'
require 'google/run/property/service_spec_template_spec_containers_security_context'
require 'google/run/property/service_spec_template_spec_containers_startup_probe'
require 'google/run/property/service_spec_template_spec_containers_startup_probe_exec'
require 'google/run/property/service_spec_template_spec_containers_startup_probe_grpc'
require 'google/run/property/service_spec_template_spec_containers_startup_probe_http_get'
require 'google/run/property/service_spec_template_spec_containers_startup_probe_http_get_http_headers'
require 'google/run/property/service_spec_template_spec_containers_startup_probe_tcp_socket'
require 'google/run/property/service_spec_template_spec_containers_volume_mounts'
module GoogleInSpec
  module Run
    module Property
      class ServiceSpecTemplateSpecContainers
        attr_reader :name

        attr_reader :image

        attr_reader :command

        attr_reader :args

        attr_reader :env

        attr_reader :resources

        attr_reader :working_dir

        attr_reader :ports

        attr_reader :env_from

        attr_reader :volume_mounts

        attr_reader :liveness_probe

        attr_reader :readiness_probe

        attr_reader :startup_probe

        attr_reader :termination_message_path

        attr_reader :termination_message_policy

        attr_reader :image_pull_policy

        attr_reader :security_context

        def initialize(args = nil, parent_identifier = nil)
          return if args.nil?
          @parent_identifier = parent_identifier
          @name = args['name']
          @image = args['image']
          @command = args['command']
          @args = args['args']
          @env = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersEnvArray.parse(args['env'], to_s)
          @resources = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersResources.new(args['resources'], to_s)
          @working_dir = args['workingDir']
          @ports = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersPortsArray.parse(args['ports'], to_s)
          @env_from = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersEnvFromArray.parse(args['envFrom'], to_s)
          @volume_mounts = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersVolumeMountsArray.parse(args['volumeMounts'], to_s)
          @liveness_probe = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersLivenessProbe.new(args['livenessProbe'], to_s)
          @readiness_probe = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersReadinessProbe.new(args['readinessProbe'], to_s)
          @startup_probe = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersStartupProbe.new(args['startupProbe'], to_s)
          @termination_message_path = args['terminationMessagePath']
          @termination_message_policy = args['terminationMessagePolicy']
          @image_pull_policy = args['imagePullPolicy']
          @security_context = GoogleInSpec::Run::Property::ServiceSpecTemplateSpecContainersSecurityContext.new(args['securityContext'], to_s)
        end

        def to_s
          "#{@parent_identifier} ServiceSpecTemplateSpecContainers"
        end
      end

      class ServiceSpecTemplateSpecContainersArray
        def self.parse(value, parent_identifier)
          return if value.nil?
          return ServiceSpecTemplateSpecContainers.new(value, parent_identifier) unless value.is_a?(::Array)
          value.map { |v| ServiceSpecTemplateSpecContainers.new(v, parent_identifier) }
        end
      end
    end
  end
end
