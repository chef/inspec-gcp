# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

title 'Test GCP google_vertex_ai_featurestore_entity_type_feature resource.'

gcp_project_id = input(:gcp_project_id, value: 'gcp_project_id', description: 'The GCP project identifier.')

  featurestore_entity_type_feature = input('featurestore_entity_type_feature', value: {
		"entityType": "entity_type_1",
		"region": "us-central1",
		"description": "true",
    "value_type": "BOOL",
		"etag": "AMEw9yPfyvUh079MW1h0I-rYtVk6aTxzOIr490RcrO6sz3wVrh239BhOrhH0TBNci9Uo",
		"update_time": "2023-09-14T07:44:10.341724Z",
		"featurestore": "feature_store_1"
}, description: 'featurestore_entity_type_feature description')
control 'google_vertex_ai_featurestore_entity_type_feature-1.0' do
  impact 1.0
  title 'google_vertex_ai_featurestore_entity_type_feature resource test'

  describe google_vertex_ai_featurestore_entity_type_feature(name: "projects/#{gcp_project_id}/locations/#{featurestore_entity_type_feature['region']}/featurestores/#{featurestore_entity_type_feature['featurestore']}/entityTypes/#{featurestore_entity_type_feature['entityType']}", region: featurestore_entity_type_feature['region']) do
  	it { should exist }
  	its('etag') { should cmp featurestore_entity_type_feature['etag'] }
  	its('name') { should cmp "projects/165434197229/locations/us-central1/featurestores/feature_store_1/entityTypes/entity_type_1" }
  end

  describe google_vertex_ai_featurestore_entity_type_feature(name: "does_not_exit", region: featurestore_entity_type_feature['region']) do
  	it { should_not exist }
  end
end
