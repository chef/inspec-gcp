# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

title 'Test GCP google_vertex_ai_endpoint resource.'

gcp_project_id = input(:gcp_project_id, value: 'gcp_project_id', description: 'The GCP project identifier.')

  endpoint = input('endpoint', value: {
  "name": "value_name",
  "region": "value_region",
  "parent": "value_parent",
  "update_time": "value_updatetime",
  "model_deployment_monitoring_job": "value_modeldeploymentmonitoringjob",
  "description": "value_description",
  "network": "value_network",
  "display_name": "value_displayname",
  "etag": "value_etag",
  "create_time": "value_createtime"
}, description: 'endpoint description')
control 'google_vertex_ai_endpoint-1.0' do
  impact 1.0
  title 'google_vertex_ai_endpoint resource test'

  describe google_vertex_ai_endpoint(name: "projects/#{gcp_project_id}/locations/#{endpoint['region']}/endpoints/#{endpoint['name']}", region: endpoint['region']) do
  it { should exist }
  	its('update_time') { should cmp endpoint['update_time'] }
  	its('model_deployment_monitoring_job') { should cmp endpoint['model_deployment_monitoring_job'] }
  	its('description') { should cmp endpoint['description'] }
  	its('network') { should cmp endpoint['network'] }
  	its('display_name') { should cmp endpoint['display_name'] }
  	its('etag') { should cmp endpoint['etag'] }
  	its('create_time') { should cmp endpoint['create_time'] }
  	its('name') { should cmp endpoint['name'] }

  end

  describe google_vertex_ai_endpoint(name: "does_not_exit", region: endpoint['region']) do
  	it { should_not exist }
  end
end
