# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

title 'Test GCP google_vertex_ai_schedule resource.'

gcp_project_id = input(:gcp_project_id, value: 'gcp_project_id', description: 'The GCP project identifier.')

  schedule = input('schedule', value: {
  "name": "value_name",
  "region": "value_region",
  "parent": "value_parent",
  "started_run_count": "value_startedruncount",
  "cron": "value_cron",
  "last_pause_time": "value_lastpausetime",
  "create_time": "value_createtime",
  "start_time": "value_starttime",
  "max_run_count": "value_maxruncount",
  "next_run_time": "value_nextruntime",
  "update_time": "value_updatetime",
  "last_resume_time": "value_lastresumetime",
  "max_concurrent_run_count": "value_maxconcurrentruncount",
  "state": "value_state",
  "display_name": "value_displayname",
  "end_time": "value_endtime"
}, description: 'schedule description')
control 'google_vertex_ai_schedule-1.0' do
  impact 1.0
  title 'google_vertex_ai_schedule resource test'

  describe google_vertex_ai_schedule(name: "projects/#{gcp_project_id}/locations/#{schedule['region']}/schedules/#{schedule['name']}", region: schedule['region']) do
  	it { should exist }
  	its('started_run_count') { should cmp schedule['started_run_count'] }
  	its('name') { should cmp schedule['name'] }
  	its('cron') { should cmp schedule['cron'] }
  	its('last_pause_time') { should cmp schedule['last_pause_time'] }
  	its('create_time') { should cmp schedule['create_time'] }
  	its('start_time') { should cmp schedule['start_time'] }
  	its('max_run_count') { should cmp schedule['max_run_count'] }
  	its('next_run_time') { should cmp schedule['next_run_time'] }
  	its('update_time') { should cmp schedule['update_time'] }
  	its('last_resume_time') { should cmp schedule['last_resume_time'] }
  	its('max_concurrent_run_count') { should cmp schedule['max_concurrent_run_count'] }
  	its('state') { should cmp schedule['state'] }
  	its('display_name') { should cmp schedule['display_name'] }
  	its('end_time') { should cmp schedule['end_time'] }

  end

  describe google_vertex_ai_schedule(name: "does_not_exit", region: schedule['region']) do
  	it { should_not exist }
  end
end
