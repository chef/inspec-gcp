# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
require 'gcp_backend'
require 'google/compute/property/license_resource_requirements'

# A provider to manage Compute Engine resources.
class ComputeLicense < GcpResourceBase
  name 'google_compute_license'
  desc 'License'
  supports platform: 'gcp'

  attr_reader :params
  attr_reader :kind
  attr_reader :name
  attr_reader :charges_use_fee
  attr_reader :id
  attr_reader :license_code
  attr_reader :creation_timestamp
  attr_reader :description
  attr_reader :transferable
  attr_reader :self_link
  attr_reader :resource_requirements

  def initialize(params)
    super(params.merge({ use_http_transport: true }))
    @params = params
    @fetched = @connection.fetch(product_url(params[:beta]), resource_base_url, params, 'Get')
    parse unless @fetched.nil?
  end

  def parse
    @kind = @fetched['kind']
    @name = @fetched['name']
    @charges_use_fee = @fetched['chargesUseFee']
    @id = @fetched['id']
    @license_code = @fetched['licenseCode']
    @creation_timestamp = @fetched['creationTimestamp']
    @description = @fetched['description']
    @transferable = @fetched['transferable']
    @self_link = @fetched['selfLink']
    @resource_requirements = GoogleInSpec::Compute::Property::LicenseResourceRequirements.new(@fetched['resourceRequirements'], to_s)
  end

  def exists?
    !@fetched.nil?
  end

  def to_s
    "License #{@params[:name]}"
  end

  private

  def product_url(_ = nil)
    'https://compute.googleapis.com/compute/v1/'
  end

  def resource_base_url
    'projects/{{project}}/global/licenses/{{name}}'
  end
end
