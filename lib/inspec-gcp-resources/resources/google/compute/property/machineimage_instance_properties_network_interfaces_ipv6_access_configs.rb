# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
module GoogleInSpec
  module Compute
    module Property
      class MachineImageInstancePropertiesNetworkInterfacesIpv6AccessConfigs
        attr_reader :kind

        attr_reader :type

        attr_reader :name

        attr_reader :nat_ip

        attr_reader :external_ipv6

        attr_reader :external_ipv6_prefix_length

        attr_reader :set_public_ptr

        attr_reader :public_ptr_domain_name

        attr_reader :network_tier

        attr_reader :security_policy

        def initialize(args = nil, parent_identifier = nil)
          return if args.nil?
          @parent_identifier = parent_identifier
          @kind = args['kind']
          @type = args['type']
          @name = args['name']
          @nat_ip = args['natIP']
          @external_ipv6 = args['externalIpv6']
          @external_ipv6_prefix_length = args['externalIpv6PrefixLength']
          @set_public_ptr = args['setPublicPtr']
          @public_ptr_domain_name = args['publicPtrDomainName']
          @network_tier = args['networkTier']
          @security_policy = args['securityPolicy']
        end

        def to_s
          "#{@parent_identifier} MachineImageInstancePropertiesNetworkInterfacesIpv6AccessConfigs"
        end
      end

      class MachineImageInstancePropertiesNetworkInterfacesIpv6AccessConfigsArray
        def self.parse(value, parent_identifier)
          return if value.nil?
          return MachineImageInstancePropertiesNetworkInterfacesIpv6AccessConfigs.new(value, parent_identifier) unless value.is_a?(::Array)
          value.map { |v| MachineImageInstancePropertiesNetworkInterfacesIpv6AccessConfigs.new(v, parent_identifier) }
        end
      end
    end
  end
end
